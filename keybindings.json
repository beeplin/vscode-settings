// spell-checker: disable
[
  { "key": "ctrl+alt+,", "command": "workbench.action.openSettingsJson" },
  { "key": "ctrl+alt+.", "command": "workbench.action.openGlobalKeybindingsFile" },
  { "key": "ctrl+alt+/", "command": "workbench.action.openSnippets" },

  { "key": "ctrl+shift+-", "command": "workbench.action.splitEditorDown" },

  { "key": "alt+`", "command": "workbench.action.focusActiveEditorGroup", "when": "!editorTextFocus || focusedView == 'workbench.panel.output'" },
  { "key": "shift+alt+=", "command": "workbench.action.toggleMaximizeEditorGroup", "when": "editorPartMaximizedEditorGroup || editorPartMultipleEditorGroups" },
  { "key": "shift+alt+=", "command": "workbench.action.toggleMaximizedPanel", "when": "panelFocus" },
  { "key": "shift+alt+`", "command": "editor.action.commentLine", "when": "editorTextFocus && !editorReadonly" },
  { "key": "shift+alt+5", "command": "editor.action.blockComment", "when": "editorTextFocus && !editorReadonly" },
  { "key": "shift+alt+,", "command": "editor.toggleFold", "when": "editorTextFocus && foldingEnabled" },
  { "key": "shift+alt+.", "command": "editor.action.quickFix", "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly" },
  { "key": "shift+alt+;", "command": "workbench.action.reloadWindow" },
  { "key": "alt+\\", "command": "workbench.action.toggleSplitEditorInGroup" },
  { "key": "shift+alt+\\", "command": "workbench.action.toggleSplitEditorInGroupLayout" },
  { "key": "ctrl+alt+\\", "command": "workbench.action.joinAllGroups" },

  //  { "key": "ctrl+alt+-", "command": "editor.action.fontZoomOut" },
  //  { "key": "ctrl+alt+=", "command": "editor.action.fontZoomReset" },
  //  { "key": "ctrl+alt+shift+=", "command": "editor.action.fontZoomIn" },

  // git
  { "key": "ctrl+g", "command": "-workbench.action.gotoLine" },
  { "key": "ctrl+g ctrl+g", "command": "workbench.action.gotoLine" },
  { "key": "ctrl+g q", "command": "git.unstage" }, // Quit from stage
  { "key": "ctrl+g w", "command": "git.stage" }, // Write into stage
  { "key": "ctrl+g f", "command": "git.fetch" },
  { "key": "ctrl+g p", "command": "git.pull" },
  { "key": "ctrl+g b", "command": "git.checkout" }, // Branch
  { "key": "ctrl+g a", "command": "git.commitAmend" },
  { "key": "ctrl+g r", "command": "github-actions.explorer.refresh" },
  { "key": "ctrl+g s", "command": "git.sync" },
  { "key": "ctrl+g t", "command": "git.createTag" },
  { "key": "ctrl+g g", "command": "gidt.merge" },
  { "key": "ctrl+g z", "command": "git.undoCommit" },
  { "key": "ctrl+g x", "command": "git.revertSelectedRanges" },
  { "key": "ctrl+g c", "command": "git.commit" },
  { "key": "ctrl+g d", "command": "git.deleteBranch" },
  { "key": "ctrl+g v", "command": "git.openChange" }, // View changes
  { "key": "ctrl+g space", "command": "git.clone" },

  // test
  { "key": "ctrl+t", "command": "-workbench.action.showAllSymbols" },
  { "key": "ctrl+t ctrl+t", "command": "workbench.action.showAllSymbols" },
  { "key": "ctrl+t a", "command": "testing.runAll" },
  { "key": "ctrl+t c", "command": "testing.runAtCursor", "when": "editorTextFocus" },
  { "key": "ctrl+t f", "command": "testing.runCurrentFile", "when": "editorTextFocus" },
  { "key": "ctrl+t l", "command": "testing.reRunLastRun" },
  { "key": "ctrl+t e", "command": "testing.reRunFailTests" },
  { "key": "ctrl+t ctrl+r", "command": "testing.refreshTests", "when": "testing.canRefresh" },
  { "key": "ctrl+t ctrl+x", "command": "testing.cancelRun" },
  { "key": "ctrl+t ctrl+a", "command": "testing.debugAll" },
  { "key": "ctrl+t ctrl+c", "command": "testing.debugAtCursor", "when": "editorTextFocus" },
  { "key": "ctrl+t ctrl+f", "command": "testing.debugCurrentFile", "when": "editorTextFocus" },
  { "key": "ctrl+t ctrl+l", "command": "testing.debugLastRun" },
  { "key": "ctrl+t ctrl+e", "command": "testing.debugFailTests" },
  { "key": "ctrl+t ctrl+m", "command": "testing.openOutputPeek" },
  { "key": "ctrl+t ctrl+i", "command": "testing.toggleInlineTestOutput" },
  { "key": "ctrl+t ctrl+o", "command": "testing.showMostRecentOutput", "when": "testing.hasAnyResults" },
  { "key": "ctrl+t ctrl+shift+a", "command": "testing.coverageAll" },
  { "key": "ctrl+t ctrl+shift+c", "command": "testing.coverageAtCursor", "when": "editorTextFocus" },
  { "key": "ctrl+t ctrl+shift+f", "command": "testing.coverageCurrentFile", "when": "editorTextFocus" },
  { "key": "ctrl+t ctrl+shift+l", "command": "testing.coverageLastRun" },
  { "key": "ctrl+t ctrl+shift+i", "command": "testing.toggleInlineCoverage" },

  // fix
  { "key": "ctrl+shift+.", "command": "-breadcrumbs.focusAndSelect", "when": "breadcrumbsPossible && breadcrumbsVisible" },
  { "key": "ctrl+enter", "command": "-github.copilot.generate", "when": "editorTextFocus && github.copilot.activated && !commentEditorFocused" },

  // vim fix
  { "key": "ctrl+down", "command": "-extension.vim_ctrl+down", "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'" },
  { "key": "ctrl+up", "command": "-extension.vim_ctrl+up", "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'" },
  { "key": "shift+alt+down", "command": "-extension.vim_cmd+alt+down", "when": "editorTextFocus && vim.active && !inDebugRepl" },
  { "key": "shift+alt+up", "command": "-extension.vim_cmd+alt+up", "when": "editorTextFocus && vim.active && !inDebugRepl" },
  { "key": "shift+;", "command": "vim.showQuickpickCmdLine", "when": "inZenMode && vim.mode != 'Insert'" },
  { "key": "escape", "command": "-extension.vim_escape", "when": "editorTextFocus && vim.active && !inDebugRepl" },
  {
    "key": "escape",
    "command": "extension.vim_escape",
    "when": "editorTextFocus && vim.active && !inDebugRepl && !inlineSuggestionVisible && !suggestWidgetVisible && !notificationToastsVisible && !codeActionMenuVisible && !pasteWidgetVisible && !dropWidgetVisible && !parameterHintsVisible && !breakpointWidgetVisible"
  }
]
