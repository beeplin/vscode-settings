// spell-checker: disable
[
  { "key": "ctrl+alt+t", "command": "workbench.view.extension.test" },
  { "key": "ctrl+shift+alt+t", "command": "workbench.view.extension.todo" },
  { "key": "ctrl+shift+alt+r", "command": "workbench.view.remote" },
  { "key": "ctrl+shift+alt+p", "command": "workbench.view.extension.github-pull-requests" },
  { "key": "ctrl+shift+alt+a", "command": "workbench.view.extension.github-actions" },

  { "key": "ctrl+alt+,", "command": "workbench.action.openSettingsJson" },
  { "key": "ctrl+alt+.", "command": "workbench.action.openGlobalKeybindingsFile" },
  { "key": "ctrl+alt+/", "command": "workbench.action.openSnippets" },

  // { "key": "shift+alt+=", "command": "workbench.action.toggleMaximizeEditorGroup", "when": "editorPartMaximizedEditorGroup || editorPartMultipleEditorGroups" },
  { "key": "ctrl+e ctrl+m", "command": "workbench.action.toggleMaximizedPanel", "when": "panelFocus" },
  { "key": "shift+alt+;", "command": "workbench.action.reloadWindow" },
  { "key": "alt+`", "command": "workbench.action.focusActiveEditorGroup", "when": "!editorTextFocus || focusedView == 'workbench.panel.output'" },
  { "key": "shift+alt+5", "command": "editor.action.blockComment", "when": "editorTextFocus && !editorReadonly" },
  { "key": "shift+alt+.", "command": "editor.action.quickFix", "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly" },
  { "key": "shift+alt+`", "command": "editor.action.commentLine", "when": "editorTextFocus && !editorReadonly" },
  { "key": "shift+alt+,", "command": "editor.toggleFold", "when": "editorTextFocus && foldingEnabled" },
  { "key": "shift+alt+\\", "command": "workbench.action.toggleSplitEditorInGroup" },
  { "key": "ctrl+shift+alt+\\", "command": "workbench.action.toggleSplitEditorInGroupLayout" },
  // { "key": "alt+\\", "command": "workbench.action.splitEditorDown" },
  { "key": "ctrl+alt+\\", "command": "workbench.action.joinAllGroups" },
  { "key": "alt+\\", "command": "toggle.diff.renderSideBySide", "when": "isInDiffEditor" },

  //  { "key": "ctrl+alt+-", "command": "editor.action.fontZoomOut" },
  //  { "key": "ctrl+alt+=", "command": "editor.action.fontZoomReset" },
  //  { "key": "ctrl+alt+shift+=", "command": "editor.action.fontZoomIn" },

  // git
  { "key": "ctrl+g", "command": "-workbench.action.gotoLine" },
  { "key": "ctrl+g ctrl+g", "command": "workbench.action.gotoLine" },
  { "key": "ctrl+g", "command": "-workbench.action.terminal.goToRecentDirectory", "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported" },
  { "key": "ctrl+g ctrl+g", "command": "workbench.action.terminal.goToRecentDirectory", "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported" },
  { "key": "ctrl+g q", "command": "git.unstage" }, // Quit from stage
  { "key": "ctrl+g w", "command": "git.stage" }, // Write into stage
  { "key": "ctrl+g f", "command": "git.fetch" },
  { "key": "ctrl+g p", "command": "git.pull" },
  { "key": "ctrl+g b", "command": "git.checkout" }, // Branch
  { "key": "ctrl+g a", "command": "git.commitAmend" },
  { "key": "ctrl+g r", "command": "github-actions.explorer.current-branch.refresh" },
  { "key": "ctrl+g s", "command": "git.sync" },
  { "key": "ctrl+g t", "command": "git.createTag" },
  { "key": "ctrl+g g", "command": "git.merge" },
  { "key": "ctrl+g z", "command": "git.undoCommit" },
  { "key": "ctrl+g x", "command": "git.revertSelectedRanges" },
  { "key": "ctrl+g c", "command": "git.commit" },
  { "key": "ctrl+g d", "command": "git.deleteBranch" },
  { "key": "ctrl+g v", "command": "git.openChange" }, // View changes
  { "key": "ctrl+g space", "command": "git.clone" },

  // fix
  { "key": "ctrl+shift+.", "command": "-breadcrumbs.focusAndSelect", "when": "breadcrumbsPossible && breadcrumbsVisible" },
  { "key": "ctrl+enter", "command": "-github.copilot.generate", "when": "editorTextFocus && github.copilot.activated && !commentEditorFocused" },

  // // vim fix
  // { "key": "ctrl+down", "command": "-extension.vim_ctrl+down", "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'" },
  // { "key": "ctrl+up", "command": "-extension.vim_ctrl+up", "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'" },
  // { "key": "shift+alt+down", "command": "-extension.vim_cmd+alt+down", "when": "editorTextFocus && vim.active && !inDebugRepl" },
  // { "key": "shift+alt+up", "command": "-extension.vim_cmd+alt+up", "when": "editorTextFocus && vim.active && !inDebugRepl" },
  // { "key": "shift+;", "command": "vim.showQuickpickCmdLine", "when": "inZenMode && vim.mode != 'Insert'" },
  // { "key": "escape", "command": "-extension.vim_escape", "when": "editorTextFocus && vim.active && !inDebugRepl" },
  // {
  //   "key": "escape",
  //   "command": "extension.vim_escape",
  //   "when": "editorTextFocus && vim.active && !inDebugRepl && !inlineSuggestionVisible && !suggestWidgetVisible && !notificationToastsVisible && !codeActionMenuVisible && !pasteWidgetVisible && !dropWidgetVisible && !parameterHintsVisible && !breakpointWidgetVisible"
  // },

  // ctrl+; => ctrl+t
  { "key": "ctrl+t", "command": "-workbench.action.showAllSymbols" },
  { "key": "ctrl+t ctrl+t", "command": "workbench.action.showAllSymbols" },
  { "key": "ctrl+t a", "command": "testing.runAll" },
  { "key": "ctrl+t c", "command": "testing.runAtCursor", "when": "editorTextFocus" },
  { "key": "ctrl+t f", "command": "testing.runCurrentFile", "when": "editorTextFocus" },
  { "key": "ctrl+t l", "command": "testing.reRunLastRun" },
  { "key": "ctrl+t e", "command": "testing.reRunFailTests" },
  { "key": "ctrl+t ctrl+r", "command": "testing.refreshTests", "when": "testing.canRefresh" },
  { "key": "ctrl+t ctrl+x", "command": "testing.cancelRun" },
  { "key": "ctrl+t ctrl+a", "command": "testing.debugAll" },
  { "key": "ctrl+t ctrl+c", "command": "testing.debugAtCursor", "when": "editorTextFocus" },
  { "key": "ctrl+t ctrl+f", "command": "testing.debugCurrentFile", "when": "editorTextFocus" },
  { "key": "ctrl+t ctrl+l", "command": "testing.debugLastRun" },
  { "key": "ctrl+t ctrl+e", "command": "testing.debugFailTests" },
  { "key": "ctrl+t ctrl+m", "command": "testing.openOutputPeek" },
  { "key": "ctrl+t ctrl+i", "command": "testing.toggleInlineTestOutput" },
  { "key": "ctrl+t ctrl+o", "command": "testing.showMostRecentOutput", "when": "testing.hasAnyResults" },
  { "key": "ctrl+t ctrl+shift+a", "command": "testing.coverageAll" },
  { "key": "ctrl+t ctrl+shift+c", "command": "testing.coverageAtCursor", "when": "editorTextFocus" },
  { "key": "ctrl+t ctrl+shift+f", "command": "testing.coverageCurrentFile", "when": "editorTextFocus" },
  { "key": "ctrl+t ctrl+shift+l", "command": "testing.coverageLastRun" },
  { "key": "ctrl+t ctrl+shift+i", "command": "testing.toggleInlineCoverage" },

  // ctrl+k => ctrl+e
  { "key": "ctrl+e ctrl+c", "command": "editor.action.addCommentLine", "when": "editorTextFocus && !editorReadonly" },
  { "key": "ctrl+e ctrl+f", "command": "editor.action.formatSelection", "when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly" },
  { "key": "ctrl+e ctrl+d", "command": "editor.action.moveSelectionToNextFindMatch", "when": "editorFocus" },
  { "key": "ctrl+e ctrl+u", "command": "editor.action.removeCommentLine", "when": "editorTextFocus && !editorReadonly" },
  { "key": "ctrl+e f12", "command": "editor.action.revealDefinitionAside", "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor" },
  { "key": "ctrl+e ctrl+f12", "command": "editor.action.revealDefinitionAside", "when": "editorHasDefinitionProvider && editorTextFocus && isWeb && !isInEmbeddedEditor" },
  { "key": "ctrl+e ctrl+k", "command": "editor.action.selectFromAnchorToCursor", "when": "editorTextFocus && selectionAnchorSet" },
  { "key": "ctrl+e ctrl+b", "command": "editor.action.setSelectionAnchor", "when": "editorTextFocus" },
  { "key": "ctrl+e ctrl+i", "command": "editor.action.showHover", "when": "editorTextFocus" },
  { "key": "ctrl+e ctrl+x", "command": "editor.action.trimTrailingWhitespace", "when": "editorTextFocus && !editorReadonly" },
  { "key": "ctrl+e ctrl+,", "command": "editor.createFoldingRangeFromSelection", "when": "editorTextFocus && foldingEnabled" },
  { "key": "ctrl+e ctrl+i", "command": "editor.debug.action.showDebugHover", "when": "editorTextFocus && inDebugMode" },
  { "key": "ctrl+e ctrl+0", "command": "editor.foldAll", "when": "editorTextFocus && foldingEnabled" },
  { "key": "ctrl+e ctrl+/", "command": "editor.foldAllBlockComments", "when": "editorTextFocus && foldingEnabled" },
  { "key": "ctrl+e ctrl+-", "command": "editor.foldAllExcept", "when": "editorTextFocus && foldingEnabled" },
  { "key": "ctrl+e ctrl+8", "command": "editor.foldAllMarkerRegions", "when": "editorTextFocus && foldingEnabled" },
  { "key": "ctrl+e ctrl+1", "command": "editor.foldLevel1", "when": "editorTextFocus && foldingEnabled" },
  { "key": "ctrl+e ctrl+2", "command": "editor.foldLevel2", "when": "editorTextFocus && foldingEnabled" },
  { "key": "ctrl+e ctrl+3", "command": "editor.foldLevel3", "when": "editorTextFocus && foldingEnabled" },
  { "key": "ctrl+e ctrl+4", "command": "editor.foldLevel4", "when": "editorTextFocus && foldingEnabled" },
  { "key": "ctrl+e ctrl+5", "command": "editor.foldLevel5", "when": "editorTextFocus && foldingEnabled" },
  { "key": "ctrl+e ctrl+6", "command": "editor.foldLevel6", "when": "editorTextFocus && foldingEnabled" },
  { "key": "ctrl+e ctrl+7", "command": "editor.foldLevel7", "when": "editorTextFocus && foldingEnabled" },
  { "key": "ctrl+e ctrl+[", "command": "editor.foldRecursively", "when": "editorTextFocus && foldingEnabled" },
  { "key": "ctrl+e ctrl+.", "command": "editor.removeManualFoldingRanges", "when": "editorTextFocus && foldingEnabled" },
  { "key": "ctrl+e ctrl+l", "command": "editor.toggleFold", "when": "editorTextFocus && foldingEnabled" },
  { "key": "ctrl+e ctrl+shift+l", "command": "editor.toggleFoldRecursively", "when": "editorTextFocus && foldingEnabled" },
  { "key": "ctrl+e ctrl+j", "command": "editor.unfoldAll", "when": "editorTextFocus && foldingEnabled" },
  { "key": "ctrl+e ctrl+=", "command": "editor.unfoldAllExcept", "when": "editorTextFocus && foldingEnabled" },
  { "key": "ctrl+e ctrl+9", "command": "editor.unfoldAllMarkerRegions", "when": "editorTextFocus && foldingEnabled" },
  { "key": "ctrl+e ctrl+]", "command": "editor.unfoldRecursively", "when": "editorTextFocus && foldingEnabled" },
  { "key": "ctrl+e f2", "command": "togglePeekWidgetFocus", "when": "inReferenceSearchEditor || referenceSearchVisible" },
  { "key": "ctrl+e ctrl+alt+c", "command": "workbench.action.addComment", "when": "activeCursorHasCommentingRange" },
  { "key": "ctrl+e ctrl+shift+c", "command": "copyRelativeFilePath", "when": "!editorFocus" },
  { "key": "ctrl+e ctrl+shift+c", "command": "copyRelativeFilePath", "when": "editorFocus" },
  { "key": "ctrl+e ctrl+k", "command": "editor.action.defineKeybinding", "when": "resource == 'vscode-userdata:/c%3A/Users/beepl/AppData/Roaming/Code/User/keybindings.json'" },
  { "key": "ctrl+e i", "command": "inlineChat.startWithCurrentLine", "when": "inlineChatHasProvider && !editorReadonly && !inlineChatVisible" },
  { "key": "ctrl+e ctrl+a", "command": "keybindings.editor.addKeybinding", "when": "inKeybindings && keybindingFocus" },
  { "key": "ctrl+e ctrl+e", "command": "keybindings.editor.defineWhenExpression", "when": "inKeybindings && keybindingFocus" },
  { "key": "ctrl+e ctrl+i", "command": "list.showHover", "when": "listFocus && !inputFocus && !treestickyScrollFocused" },
  { "key": "ctrl+e ctrl+c", "command": "notebook.cell.collapseCellInput", "when": "notebookCellListFocused && !inputFocus && !notebookCellInputIsCollapsed" },
  { "key": "ctrl+e t", "command": "notebook.cell.collapseCellOutput", "when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus && !notebookCellOutputIsCollapsed" },
  { "key": "ctrl+e ctrl+c", "command": "notebook.cell.expandCellInput", "when": "notebookCellInputIsCollapsed && notebookCellListFocused" },
  { "key": "ctrl+e t", "command": "notebook.cell.expandCellOutput", "when": "notebookCellListFocused && notebookCellOutputIsCollapsed" },
  { "key": "ctrl+e ctrl+shift+\\", "command": "notebook.cell.split", "when": "editorTextFocus && notebookCellEditable && notebookEditable && notebookEditorFocused" },
  { "key": "ctrl+e y", "command": "notebook.cell.toggleOutputScrolling", "when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus" },
  { "key": "ctrl+e ctrl+shift+n", "command": "notifications.showList" },
  { "key": "ctrl+e s", "command": "saveAll" },
  { "key": "ctrl+e ctrl+w", "command": "workbench.action.closeAllEditors" },
  { "key": "ctrl+e ctrl+shift+w", "command": "workbench.action.closeAllGroups" },
  { "key": "ctrl+e w", "command": "workbench.action.closeEditorsInGroup" },
  { "key": "ctrl+e f", "command": "workbench.action.closeFolder", "when": "emptyWorkspaceSupport && workbenchState != 'empty'" },
  { "key": "ctrl+e u", "command": "workbench.action.closeUnmodifiedEditors" },
  { "key": "ctrl+e shift+o", "command": "workbench.action.compareEditor.openSide", "when": "inDiffEditor" },
  { "key": "ctrl+e o", "command": "workbench.action.copyEditorToNewWindow", "when": "activeEditor" },
  { "key": "ctrl+e m", "command": "workbench.action.editor.changeLanguageMode", "when": "!notebookEditorFocused" },
  { "key": "ctrl+e p", "command": "workbench.action.files.copyPathOfActiveFile" },
  { "key": "ctrl+e ctrl+o", "command": "workbench.action.files.openFolder", "when": "openFolderWorkspaceSupport" },
  { "key": "ctrl+e ctrl+o", "command": "workbench.action.files.openLocalFolder", "when": "remoteFileDialogVisible" },
  { "key": "ctrl+e r", "command": "workbench.action.files.revealActiveFileInWindows" },
  { "key": "ctrl+e ctrl+shift+s", "command": "workbench.action.files.saveWithoutFormatting" },
  { "key": "ctrl+e ctrl+up", "command": "workbench.action.focusAboveGroup" },
  { "key": "ctrl+e ctrl+down", "command": "workbench.action.focusBelowGroup" },
  { "key": "ctrl+e ctrl+left", "command": "workbench.action.focusLeftGroup" },
  { "key": "ctrl+e ctrl+right", "command": "workbench.action.focusRightGroup" },
  { "key": "ctrl+e ctrl+shift+\\", "command": "workbench.action.joinEditorInGroup", "when": "sideBySideEditorActive" },
  { "key": "ctrl+e enter", "command": "workbench.action.keepEditor" },
  { "key": "ctrl+e ctrl+r", "command": "workbench.action.keybindingsReference" },
  { "key": "ctrl+e down", "command": "workbench.action.moveActiveEditorGroupDown" },
  { "key": "ctrl+e left", "command": "workbench.action.moveActiveEditorGroupLeft" },
  { "key": "ctrl+e right", "command": "workbench.action.moveActiveEditorGroupRight" },
  { "key": "ctrl+e up", "command": "workbench.action.moveActiveEditorGroupUp" },
  { "key": "ctrl+e ctrl+q", "command": "workbench.action.navigateToLastEditLocation" },
  { "key": "ctrl+e ctrl+pagedown", "command": "workbench.action.nextEditorInGroup" },
  { "key": "ctrl+e ctrl+s", "command": "workbench.action.openGlobalKeybindings" },
  { "key": "ctrl+e shift+enter", "command": "workbench.action.pinEditor", "when": "!activeEditorIsPinned" },
  { "key": "ctrl+e ctrl+pageup", "command": "workbench.action.previousEditorInGroup" },
  { "key": "ctrl+e ctrl+t", "command": "workbench.action.selectTheme" },
  { "key": "ctrl+e ctrl+p", "command": "workbench.action.showAllEditors" },
  { "key": "ctrl+e ctrl+\\", "command": "workbench.action.splitEditorDown" },
  { "key": "ctrl+e ctrl+shift+\\", "command": "workbench.action.splitEditorInGroup", "when": "activeEditorCanSplitInGroup" },
  { "key": "ctrl+e ctrl+\\", "command": "workbench.action.splitEditorLeft" },
  { "key": "ctrl+e ctrl+\\", "command": "workbench.action.splitEditorOrthogonal" },
  { "key": "ctrl+e ctrl+\\", "command": "workbench.action.splitEditorRight" },
  { "key": "ctrl+e ctrl+\\", "command": "workbench.action.splitEditorUp" },
  { "key": "ctrl+e ctrl+m", "command": "workbench.action.toggleMaximizeEditorGroup", "when": "editorPartMaximizedEditorGroup || editorPartMultipleEditorGroups" },
  { "key": "ctrl+e z", "command": "workbench.action.toggleZenMode", "when": "!isAuxiliaryWindowFocusedContext" },
  { "key": "ctrl+e shift+enter", "command": "workbench.action.unpinEditor", "when": "activeEditorIsPinned" },
  { "key": "ctrl+e c", "command": "workbench.files.action.compareWithClipboard" },
  { "key": "ctrl+e d", "command": "workbench.files.action.compareWithSaved" },
  { "key": "ctrl+e e", "command": "workbench.files.action.focusOpenEditorsView", "when": "workbench.explorer.openEditorsView.active" },
  { "key": "ctrl+e down", "command": "views.moveViewDown", "when": "focusedView != ''" },
  { "key": "ctrl+e left", "command": "views.moveViewLeft", "when": "focusedView != ''" },
  { "key": "ctrl+e right", "command": "views.moveViewRight", "when": "focusedView != ''" },
  { "key": "ctrl+e up", "command": "views.moveViewUp", "when": "focusedView != ''" },
  { "key": "ctrl+e ctrl+alt+s", "command": "git.stageSelectedRanges", "when": "editorTextFocus && !operationInProgress && resourceScheme == 'file'" },
  { "key": "ctrl+e ctrl+n", "command": "git.unstageSelectedRanges", "when": "editorTextFocus && isInDiffEditor && isInDiffRightEditor && !operationInProgress && resourceScheme == 'git'" },
  { "key": "ctrl+e v", "command": "markdown.showPreviewToSide", "when": "!notebookEditorFocused && editorLangId == 'markdown'" },
  { "key": "ctrl+e ctrl+r", "command": "git.revertSelectedRanges", "when": "editorTextFocus && !operationInProgress && resourceScheme == 'file'" },
  {
    "key": "ctrl+e ctrl+alt+down",
    "command": "editor.action.nextCommentingRange",
    "when": "accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments'"
  },
  {
    "key": "ctrl+e ctrl+alt+up",
    "command": "editor.action.previousCommentingRange",
    "when": "accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments'"
  },
  // {
  //   "key": "ctrl+e i",
  //   "command": "notebook.cell.chat.start",
  //   "when": "config.notebook.experimental.cellChat && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus || config.notebook.experimental.generate && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus"
  // },
  {
    "key": "ctrl+e ctrl+i",
    "command": "workbench.action.terminal.focusHover",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalIsOpen || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
  }
]
